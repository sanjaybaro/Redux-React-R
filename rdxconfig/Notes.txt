REDUX CONFIGUARTION 

# learning scalling of application with proper structure


1. default state param to initialState

Default param

state=initialState

it will not break teh app if something happen to state
here initialState is contain all the state of other compnent
as well if something breaks in the single Components it
will break the whole application
So, the hack is to come out from this is to
state=initialState.

2. Combine reducer

import of reducer from different folder example below:

```
import {reducer as counterReducer} from "./counter/reducer"
import {reducer as todoReducer} from "./Todo/reducer"

```
const rootReducer = combineReducers({
  counterReducer,
  todoReducer,
});

3. How to access the state from combineReducers:

```
 const count = useSelector((state) => {
    console.log(state);
    return state.counterReducer.counter;
  });
```

4. Making Authentication and Private Route
-auth with redux (reqres api)
-private route with redux (making store use authreducer use along with Navigate)


5. Discussing about issue bug related to action type

UI(ADD)---> 1. Todo
            2. Counter
            3. Login
            4. Home
when ui trigger with add button it will trigger
the action with type : ADD and it will go to
every action in search , if this happen all
will cause a big problem , related to rendering
issue and if the type:ADD is use in somwhere
also it will give use some error . to avoid this

solution- Common actionType
place action Type in only one place

6. Middleware Intro:

structure
```
const logger=(a)=>(b)=>(c)=>{

}

export const store=legacy_createStore(rootReducer,applyMiddleware(logger)) 

